version: "3"

services:
  # web:
  #   env_file:
  #     - .env
  #   build:
  #     context: .
  #     dockerfile: ./docker/Dockerfile
  #   restart: always
  #   volumes:
  #     - .:/code
  #   depends_on:
  #     - db
  #     # - minio
  #   ports:
  #     - 8080:8000
  #   command: ["python3", "manage.py", "runserver", "0.0.0.0:8000"]
    # networks:
    #   - nw

  db:
    image: postgis/postgis:latest
    restart: always
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    ports:
      - 5433:5432
    env_file:
      - .env

    # networks:
    #   - nw

  # minio:
  #   image: "docker.io/minio/minio:${MINIO_TAG:-RELEASE.2023-10-25T06-33-25Z}"
  #   restart: always
  #   command: server /export --console-address ":9090" --address "0.0.0.0:9000"
  #   volumes:
  #     - ./DockerData/minio_data:/export
  #   env_file:
  #     - .env
  #   # ports:
  #   #   - 9000:9000
  #   #   - 9090:9090
  #   networks:
  #     - nw

  # redis:
  #   image: redis:alpine
  #   restart: always
  #   entrypoint: redis-server --appendonly yes
  #   # ports:
  #   #   - 6379:6379
  #   volumes:
  #     - ./DockerData/redis_data:/var/lib/redis
  #   # networks:
  #   #   - nw

  # worker:
  #   build:
  #     context: .
  #     dockerfile: ./docker/Dockerfile
  #   restart: always
  #   entrypoint: "celery -A project worker -l DEBUG"
  #   depends_on:
  #     - web
  #     - redis
  #   volumes:
  #     - .:/code
  #   env_file:
  #     - .env
  #   # networks:
  #   #   - nw

  # beat:
  #   build:
  #     context: .
  #     dockerfile: ./docker/Dockerfile
  #   restart: always
  #   entrypoint: "celery -A project beat -l DEBUG"
  #   depends_on:
  #     - web
  #     - redis
  #   volumes:
  #     - .:/code
  #   env_file:
  #     - .env
    # networks:
    #   - nw

  fastapi:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - .:/code
    depends_on:
      - db
      # - mongo
    ports:
      - 8001:8000
    entrypoint: ["uvicorn", "backend.main:app", "--host", "0.0.0.0", "--port", "8000"]
  #   networks:
  #     - nw

  # mongo:
  #   image: mongo:6.0.2
  #   restart: always
  #   volumes:
  #     - ./DockerData/mongodb_data:/data/db
    # ports:
    #   - 27017:27017
    # env_file:
    #   - .env
    # networks:
    #   - nw

  # createbuckets:
  #   image: minio/mc
  #   entrypoint: >
  #     /bin/sh -c " mc config host add minio http://minio:9000 \$MINIO_ACCESS_KEY \$MINIO_SECRET_KEY; mc mb minio/\$MINIO_BUCKET_NAME; mc anonymous set download minio/\$MINIO_BUCKET_NAME/publicuploads/; exit 0; "
  #   env_file:
  #     - .env
  #   depends_on:
  #     - minio
  #   networks:
  #     - nw

  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - 80:80
  #   depends_on:
  #     - web
  #     - fastapi
  #     - minio
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #   networks:
  #     nw:
  #       aliases:
  #         - minio.localhost
          # - django.localhost
          # - fastapi.localhost

# networks:
#   nw:
#     driver: bridge

